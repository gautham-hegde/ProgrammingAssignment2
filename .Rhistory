1+1
?rnorm
help.search("rnorm")
args("rnorm")
rnorm
head(x)
x <- readLines(con)
con <- url("http://www.jhsph.edu", "r")
x <- readLines(con)
head(x)
source('~/readLinesFrom.R')
source('~/readLinesFrom.R', echo=TRUE)
?rpart
install.packages("KernSmooth")
?KernSmooth
??KernSmooth
KernSmooth
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:KernSmooth", unload=TRUE)
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
find.package(devtools)
install.packages("devtools")
find.package(devtools)
debugSource('~/Documents/projects/coursera/RProgramming/pollutantmean.R', echo=TRUE)
debugSource('~/Documents/projects/coursera/RProgramming/pollutantmean.R', echo=TRUE)
corr <- function(directory, threshold=0) {
fileInfo <- complete(directory)
cube <- function(x, n) {
x^3 }
cube(3)
x <- 1:10
if(x>5){ x<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <c(1:10)
x <- c(1:10)
x
class(x)
x[x>4]
x <- matrix(1:6,2,3)
x
x <- matrix(1:6,3,2)
x
x <- matrix(1:6,2,3)
x
x[1,]
x[,2]
> x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x
x[[1]]
x[1]
x[1:3]
x[c(1:3)]
x[c(1,3)]
x[1,3]
x
x <- [1,2,NA,4,,NA,5,5,5,NA]
x <- [1,2,NA,4,NA,5,5,5,NA]
x <- c(1,2,NA,4,NA,5,5,5,NA)
x
y <- is.na(x)
y
x[!y]
y <- x[!y]
y
x <- airquality[1:6,]
x
x <-complete.cases(x)
x
x <- airquality[1:6,]
airquality
x
good <- complete.cases(x)
good
x[good,]
setwd("~/Documents/projects/coursera/RProgramming")
dir()
source("submitscript1.R")
submit()
2
submit
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
iris
?iris
top iris
head iris
head(iris)
iris[sepal.length]
iris["Sepal.Length"]
iris[1,]
iris[,1]
iris["Sepal.Length", Species='virginica']
iris[Species=virginica"]
;
""
iris["Species=virginica"]
iris[iris$Species=virginica]
iris[iris$Species=virginica,]
iris[iris$Species==virginica,]
iris[iris$Species=='virginica',]
iris[iris$Species=='virginica',Sepal.value]
iris[iris$Species=='virginica',"Sepal.value"]
top(iris)
head(iris)
iris[iris$Species=='virginica',"Sepal.length"]
iris[iris$Species=='virginica',"Sepal.Length"]
mean(iris[iris$Species=='virginica',"Sepal.Length"])
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 1, mean)
iris[,1:4]
head(iris)
?applu
?apply
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
with(mtcars, tapply(hp, cyl, mean))
?abs
abs(122.28571)
abs(122.28571-82.63636)
122.28571-82.63636
abs(82.63636)
abs(with(mtcars, tapply(hp, cyl, mean)))
debug(ls)
ls
ls
ls
debug(ls)
ls
dir
dir()
ls()
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(hp, cyl, mean))
abs(209.21429-82.63636)
abs(82.63636-209.21429)
get wd
wd()
getwd()
setwd("~/Documents/projects/coursera/RProgramming/ProgrammingAssignment2")
head(airquality)
lapply
?lapply
airquality$Ozone
lapply(airquality$ozone,mean)
lapply(airquality$ozone,+2)
as.list(airquality$Ozone)
class(airquality$Ozone)
foo <- as.list(airquality$Ozone)
foo <- as.list(airquality$Ozone)
class(foo)
foo
foo[1]
foo[[1]]
airquality
head(airquality)
lapply(airquality, mean)
bad = airquality[NA]
bad = airquality['NA']
bad = airquality['NA',]
bad
complete.cases(airquality)
good <- complete.cases(airquality)
airquality[good,]
lapply(airquality[good,], mean)
lapply(airquality[good,][1,3,5], mean)
airquality[good,][,1:3]
airquality[airquality$Temp > 50][,1:3]
airquality[airquality$Temp>50,][,1:3]
airquality[airquality$Wind>50,][,1:3]
airquality[airquality$Wind>12,][,1:3]
airquality[airquality$Wind>12,][,c(1,3,5)]
lapply(airquality[good,][1,3,5], mean)
lapply(airquality[good,], mean)
sapply(airquality[good,], mean)
foo <- sapply(airquality[good,], mean)
foo[1]
foo[1] + 3
?lapply
?apply
?tapply
source('cachematrix.R')
